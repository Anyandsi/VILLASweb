variables:
  GIT_SUBMODULE_STRATEGY: normal
  DOCKER_COMPOSE_VERSION: 1.14.0
  PY_DOCKER_VERSION: 2.4.2
  CI: "true"

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
    - node_modules/
    - _site/vendor/
    - .bundled/
    - .yarn

stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  before_script:
    - mkdir -p build
  script:
    - npm install
    - npm run build
  image: node:7.9.0-slim
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  tags:
    - docker

test_job:
  stage: test
  script:
    - npm test
  image: node:7.9.0-slim
  dependencies:
    - build_job
  tags:
    - docker

deploy_review:
  stage: deploy
  only:
    - develop
  environment: review
  variables:
    COMPOSE_TLS_VERSION: "TLSv1_2"
    DOCKER_HOST: "$DEPLOYMENT_HOST"
    DOCKER_TLS_VERIFY: "1"
    DOCKER_CERT_PATH: "certs"
  before_script:
    - apk add --no-cache py-pip
    - pip install --upgrade pip
    - pip install docker-compose==$DOCKER_COMPOSE_VERSION
    - pip install -U docker==$PY_DOCKER_VERSION
    - mkdir -p $DOCKER_CERT_PATH
    - echo "$DEPLOYMENT_CACERT"      > $DOCKER_CERT_PATH/ca.pem
    - echo "$DEPLOYMENT_CLIENT_CERT" > $DOCKER_CERT_PATH/cert.pem
    - echo "$DEPLOYMENT_CLIENT_KEY"  > $DOCKER_CERT_PATH/key.pem
    - docker --version
    - docker-compose --version
    - docker info
  script:
    - docker-compose pull
    - docker-compose build --no-cache
    - docker-compose up -d
  after_script:
    - docker-compose rm -f
  image: docker:17
  dependencies:
    - build_job
  tags:
    - docker
